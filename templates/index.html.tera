{% extends "base" %}

{% block extracontent %}
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-csv/1.0.21/jquery.csv.min.js" integrity="sha512-Y8iWYJDo6HiTo5xtml1g4QqHtl/PO1w+dmUpQfQSOTqKNsMhExfyPN2ncNAe9JuJUSKzwK/b6oaNPop4MXzkwg==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-csv/1.0.21/jquery.csv.js" integrity="sha512-2ypsPur7qcA+2JjmmIJR1c4GWFqTLIe1naXXplraMg0aWyTOyAMpOk+QL+ULpzwrO/GdwA3qB3FhVyyiR8gdhw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script src="https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@3.12.0/dist/tf.min.js" integrity="sha256-Yl5oUVtHQ3wqFAPCSZmKxzSb/uZt+xzdT9mDPwwNYbk=" crossorigin="anonymous"></script>
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js" type="text/javascript"></script>


<p id="modelo">&emsp;No se ha encontrado modelo!</p>

<div class="container">
<table class="table">
    <thead>
      <tr>
        <th scope="col">Name</th>
        <th scope="col">Data</th>
        <th scope="col">Prediction</th>
      </tr>
    </thead>
    <tbody>
    {% for c, k in stocks %}
      <tr>
        <td>{{c}}</td>
        <td>{{k}}</td>
        <td>
          <button class="btn btn-primary" id={{c}} onclick="request('{{c}}')">Predict</button>
        </td>
      </tr>
    {% endfor %}
    </tbody>
</table>
</div>

<script>

  class L2 {
    static className = 'L2';
    constructor(config) {
       return tf.regularizers.l1l2(config)
    }
  }
tf.serialization.registerClass(L2);
  var modelo = null;
  (async () => {
    document.getElementById("modelo").innerHTML = "&emsp;Cargando!";
    modelo = await tf.loadLayersModel("/model.json");
    document.getElementById("modelo").innerHTML = "&emsp;Modelo Cargado!";
  })();
  
  
  
  function request(stock){
      var xmlHttp = new XMLHttpRequest();
      xmlHttp.onreadystatechange = function() { 
          if (xmlHttp.readyState == 4 && xmlHttp.status == 200)
              callback(xmlHttp.responseText);
      }
      xmlHttp.open("GET", "/predict/" + stock, true); // true for asynchronous 
      xmlHttp.send(null);
      
      div = document.getElementById(stock);
      const pre = "Predicted!!";
      div.replaceWith(pre);
  }
</script>
{% endblock extracontent %}